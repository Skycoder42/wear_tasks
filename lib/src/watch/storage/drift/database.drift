CREATE TABLE StoredCollections (
    "id" TEXT NOT NULL PRIMARY KEY,
    "data" BLOB NOT NULL,
    "pendingUpload" BOOLEAN NOT NULL DEFAULT(false)
) STRICT;

CREATE TABLE StoredItems(
  "id" TEXT NOT NULL PRIMARY KEY,
  "data" BLOB NOT NULL,
  "collectionId" TEXT NOT NULL REFERENCES StoredCollections(id) ON DELETE CASCADE
) STRICT;

-- Collections
listCollections: SELECT * FROM StoredCollections;

listPendingCollections: SELECT * FROM StoredCollections WHERE pendingUpload;

getCollection: SELECT * FROM StoredCollections WHERE id = :id;

hasPendingUploads:
  SELECT COUNT(*) > 0 FROM (
    SELECT c.id
    FROM StoredCollections AS c
    LEFT JOIN StoredItems AS i ON c.id = i.collectionId
    GROUP BY c.id
    HAVING COUNT(i.id) > 0 OR c.pendingUpload
  );

saveCollection: INSERT OR REPLACE INTO StoredCollections $collection;

deleteCollection: DELETE FROM StoredCollections WHERE id = :id;

clearCollections: DELETE FROM StoredCollections;

-- Items
hasItems: SELECT COUNT(*) > 0 FROM StoredItems;

listItems: SELECT * FROM StoredItems;

saveItem: INSERT OR REPLACE INTO StoredItems $item;

deleteItem: DELETE FROM StoredItems WHERE id = :id;
